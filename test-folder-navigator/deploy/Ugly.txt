<!DOCTYPE html>
<html>
<head>
    <title>TestFolderNavigator</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Fri Mar 24 2017 16:16:11 GMT-0700 (PDT) -->
    
    <script type="text/javascript">
        var APP_BUILD_DATE = "Fri Mar 24 2017 16:16:11 GMT-0700 (PDT)";
        var STORY    = "US1235";
        var BUILDER  = "marjo60";
        var CHECKSUM = 52301183535;
    </script>
    
    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns) 
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->
    
    
    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,items:[{xtype:"container",itemId:"information"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,doc:"top"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);STORY&&(a=a+"<br/>Source story: "+STORY),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:a})}}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.define("Rally.ui.menu.bulk.TestSet",{alias:"widget.rallyrecordmenubulktestset",extend:Rally.ui.menu.bulk.MenuItem,config:{text:"Add to TestSet...",handler:function(){this._onMenuItemChosen()},predicate:function(a){return a},prepareRecords:function(a,b){return a},baseStore:null},_onMenuItemChosen:function(){Ext.create("Rally.technicalservices.dialog.BulkAddToTestSetDialog",{listeners:{artifactchosen:this._testsetchosen,scope:this}}),console.log("created dialog")},_testsetchosen:function(a,b){console.log("Chose test set:",b);var c=this;if(this.onBeforeAction(this.records)!==!1){var d=this.records;d.length>0&&(this.baseStore=d[0].store);var e=[];Ext.Array.each(d,function(a){e.push(function(){return c._addToTestSet(a,b)})},this),Deft.Chain.sequence(e).then({scope:this,success:function(a){console.log("done",a),this.onSuccess(Ext.Array.flatten(a),[])},failure:function(a){Ext.Msg.alert("Problem saving to test set: ",a)}})}},_addToTestSet:function(a,b){var c=Ext.create("Deft.Deferred"),d=this;if(console.log("Adding ",a.get("_type"),a.get("FormattedID"),b.get("FormattedID"),b.get("_ref")),"testfolder"==a.get("_type"))Deft.Chain.parallel([function(){return d._getTestFoldersInFolder(a)},function(){return d._getTestCasesInFolder(a)}]).then({scope:d,success:function(a){var e=[];Ext.Array.each(Ext.Array.flatten(a),function(a){e.push(function(){return d._addToTestSet(a,b)})},this),Deft.Chain.sequence(e).then({scope:this,success:function(a){c.resolve(a)},failure:function(a){c.reject(a)}})},failure:function(a){c.reject(a)}});else{var e=b.getCollection("TestCases");e.load({callback:function(){console.log("adding ",a.get("_ref")," to ",e),e.add([{_ref:a.get("_ref")}]),e.sync({callback:function(){c.resolve(a)}})}})}return c.promise},_getTestCasesInFolder:function(a){var b=Ext.create("Deft.Deferred"),c=[{property:"TestFolder.ObjectID",value:a.get("ObjectID")}];return this.baseStore&&!Ext.isEmpty(this.baseStore.extra_filter_by_model.testcase)&&(c=Ext.Array.merge(c,this.baseStore.extra_filter_by_model.testcase)),Ext.create("Rally.data.wsapi.Store",{model:"TestCase",autoLoad:!0,filters:c,sorters:[{property:"DragAndDropRank",direction:"ASC"}],limit:"Infinity",listeners:{load:function(a,c,d){Ext.Array.each(c,function(a){console.log(a.get("FormattedID"))}),b.resolve(c)}}}),b.promise},_getTestFoldersInFolder:function(a){var b=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",{model:"TestFolder",autoLoad:!0,filters:[{property:"Parent.ObjectID",value:a.get("ObjectID")}],limit:"Infinity",listeners:{load:function(a,c,d){b.resolve(c)}}}),b.promise},onSuccess:function(a,b,c,d){var e={};Ext.callback(this.onActionComplete,null,[a,b,e])}}),Ext.define("Rally.technicalservices.ui.menu.item.CascadeDeleteMenuItem",{extend:Rally.ui.menu.item.RecordMenuItem,alias:"widget.tsrecordmenuitemcascadedelete",clickHideDelay:1,config:{record:void 0,handler:function(){this._onCascadeDeleteClicked()},predicate:function(a){return!0},text:"Cascade Delete"},constructor:function(a){this.initConfig(a),this.callParent(arguments)},_onCascadeDeleteClicked:function(){var a=this._launchConfirmDialog();a.on("confirm",this._doDelete,this)},_doDelete:function(){var a=this;this.view.setLoading("Finding Records To Remove"),this._getChildren(this.record).then({success:function(b){var c=b[0],d=Ext.Array.flatten(b[1]),e=[];Ext.Array.each(d,function(b){e.push(function(){return a._destroyRecord(b)})}),Ext.Array.each(c,function(b){e.push(function(){return a._destroyRecord(b)})}),a.view.setLoading("Removing "+e.length+" records"),Deft.Chain.sequence(e).then({success:function(b){a.view.setLoading(!1)},failure:function(a){Ext.msg.alert(a)}})},failure:function(a){Ext.msg.alert(a)}})},_destroyRecord:function(a){var b=Ext.create("Deft.Deferred");return a.destroy({callback:function(c,d){d.wasSuccessful()?b.resolve(1):(console.log(a.get("FormattedID"),d),b.reject("Could not destroy "+a.get("FormattedID")))}}),b.promise},_getChildren:function(a){var b=Ext.create("Deft.Deferred"),c=[a],d=this;return Deft.Chain.pipeline([function(){return d._getChildTestFolders(a,c)},function(a){var b=Ext.create("Deft.Deferred"),e=[];return Ext.Array.each(c,function(a){e.push(d._getChildTestCases(a))}),Deft.Promise.all(e).then({success:function(a){b.resolve([c,a])},failure:function(a){b.reject(a)}}),b.promise}]).then({scope:this,success:function(a){b.resolve(a)},failure:function(a){b.reject(a)}}),b.promise},_getChildTestCases:function(a){var b=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",{limit:"Infinity",model:"TestCase",filters:[{property:"TestFolder",value:a.get("_ref")}],autoLoad:!0,fetch:["FormattedID"],listeners:{scope:this,load:function(a,c){b.resolve(c)}}}),b.promise},_getChildTestFolders:function(a,b){var c=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",{limit:"Infinity",model:"TestFolder",filters:[{property:"Parent",value:a.get("_ref")}],autoLoad:!0,fetch:["FormattedID"],listeners:{scope:this,load:function(a,d){var e=[];Ext.Array.each(d,function(a){b.push(a),e.push(this._getChildTestFolders(a,b))},this),e.length>0?Deft.Promise.all(e).then({success:function(a){b=Ext.Array.merge(b,a),c.resolve(b)},failure:c.reject}):c.resolve(b)}}}),c.promise},_launchConfirmDialog:function(){console.log(this.record);var a="<b>"+this.record.get("FormattedID")+": "+this.record.get("Name")+"</b>";return Ext.create("Rally.ui.dialog.ConfirmDialog",{title:"Cascade Delete",message:"Are you sure? <br/><br/>This will delete <em>all of</em> this folder's descendant folders and test cases, regardless of your filter setting.<br/><br/>  The chosen folder is: "+a+"<br/><br/>THERE IS NO UNDO.",confirmLabel:"OK"})}}),Ext.override(Rally.ui.grid.CheckboxModel,{_recordIsSelectable:function(a){return!0}}),Ext.override(Rally.ui.menu.bulk.RecordMenu,{_getMenuItems:function(){var a=this.getRecords(),b=[{text:"Bulk Actions ("+a.length+" items)",canActivate:!1,cls:"menu-item-read-only"}].concat(this.items);return b.push({xtype:"rallyrecordmenubulktestset"}),_.each(b,function(b){Ext.apply(b,{records:a,store:this.store,onBeforeAction:this.onBeforeAction,onActionComplete:this.onActionComplete,context:this.getContext()})},this),b}}),Ext.override(Rally.ui.gridboard.GridBoard,{_applyGridFilters:function(a,b){var c=this,d=!1;console.log("_applyGridFilters",b),_.isEmpty(b.types)||1==b.types.length&&"testcase"==b.types[0]&&(a.store.extra_filter_by_model.testcase=b.filters,d=!0),console.log("filter for testcase:",d),a.store.clearFilter(!0);var e=this._getConfiguredFilters(b.filters||[],b.types||[]);d&&(e=this._getConfiguredFilters([],b.types||[])),null!==this.expandTo&&void 0!==this.expandTo&&(console.log("Expand To: ",this.expandTo),a.store.on("load",function(){c._showRecord(c.expandTo),c.expandTo=null},this,{single:!0})),Ext.isEmpty(this.searchFilter)||(e=Ext.Array.merge(this.searchFilter)),console.log("Using filters: ",e),a.store.filter(e)},_getConfiguredFilters:function(a,b){var c="board"===this.getToggleState();a||(a=[]),console.log("extraFilters",a);var d=_.compact(Ext.Array.merge(this.storeConfig&&this.storeConfig.filters,c&&this.cardBoardConfig.storeConfig&&this.cardBoardConfig.storeConfig.filters,!c&&this.gridConfig.storeConfig&&this.gridConfig.storeConfig.filters,a));return 0!=a.length&&(d=a),d},_showRecord:function(a){if(a){this.setLoading("Finding "+a.get("FormattedID")+"..."),console.log("show",a);var b=this;this.grid.collapseAll(),Rally.data.ModelFactory.getModel({type:"TestFolder",success:function(c){c.load(a.get("_ref"),{fetch:["FormattedID","Name","ObjectID","Parent"],callback:function(a){b._buildAncestorArray(a,[a]).then({success:function(a){b._expandNode(a)},failure:function(a){console.log("oops,"+a)}})},scope:this})}})}},applyCustomFilter:function(a){if(console.log("applyCustomFilter",a),a.types&&a.types.length>0){var b=this.getGridOrBoard();this.currentCustomFilter=a,b&&("board"===this.getToggleState()?this._applyBoardFilters(b,a):this._applyGridFilters(b,a))}},_expandNode:function(a,b){if(this.setLoading("Expanding...",b),a.length>0){var c=a[a.length-1],d=this.grid.getStore().findExactRecord(c);if(!d){console.log("Top Record not in current page:",c),console.log(this.grid.getStore());var e=this.grid.getStore(),f=(e.filters,c.get("ObjectID"));return this.searchFilter=[Ext.create("Rally.data.wsapi.Filter",{property:"ObjectID",value:f})],this.expandTo=a[0],this.applyCustomFilter({filters:[]}),void this.setLoading(!1)}d&&a.length>1?(a.pop(),d.isExpanded()?this._expandNode(a):(d.on("expand",function(){this._expandNode(a)},this,{single:!0}),d.expand(!1))):(this.grid.getSelectionModel().select([d]),this.grid.getView().focusNode(d),this.setLoading(!1))}},_buildAncestorArray:function(a,b){var c=Ext.create("Deft.Deferred"),d=this,e=a.get("Parent");return e?this._getFolderByObjectID(e.ObjectID).then({success:function(a){var e=a[0];b.push(e),d._buildAncestorArray(e,b).then({success:function(a){c.resolve(a)},failure:function(a){c.reject(a)}})},failure:function(a){c.reject(a)}}):c.resolve(b),c.promise},_getFolderByObjectID:function(a){var b=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",{filters:[{property:"ObjectID",value:a}],fetch:["FormattedID","Name","Parent","ObjectID"],model:"TestFolder"}).load({callback:function(a,c,d){d?b.resolve(a):b.reject("Problem getting folders: "+c.error.errors.join(". "))}}),b.promise},_clearSearch:function(){var a=this.gridConfig.storeConfig.filters;this.expandTo=null,this.searchFilter=null,this.applyCustomFilter({filters:a})},_addGrid:function(){var a=this.add(this._getGridConfig());return this.mon(a,"afterproxyload",this._onGridOrBoardLoad,this),!this.useFilterCollection&&this.currentCustomFilter&&this._applyGridFilters(a,this.currentCustomFilter),this.on("recordSelect",this._showRecord,this),this.on("clearSearch",this._clearSearch,this),this.grid=a,a}}),Ext.override(Rally.ui.menu.DefaultRecordMenu,{_getMenuItems:function(){var a=this.getRecord(),b=[];return b.push({xtype:"tsrecordmenuitemcascadedelete",view:this.view,record:a}),b}}),Ext.override(Rally.ui.menu.TestCaseRecordMenu,{_getMenuItems:function(){var a=(this.getRecord(),[]);return a}}),Ext.override(Ext.data.TreeStore,{load:function(a){a=a||{},a.params=a.params||{},console.log("treestore load",a);var b,c=this,d=a.node||c.tree.getRootNode(),e=a.callback,f=a.scope;if(d||(d=c.setRootNode({expanded:!0},!0)),d.data.expanded&&(d.data.loaded=!1,c.clearOnLoad&&(d.data.expanded=!1),a.callback=function(){c.clearOnLoad||d.collapse(),d.expand(),Ext.callback(e,f,arguments)}),a.id=d.getId(),a=Ext.apply({action:"read",filters:c.filters.items,sorters:c.getSorters(),node:a.node||d},a),c.lastOptions=a,b=new Ext.data.Operation(a),c.fireEvent("beforeload",c,b)!==!1)if(c.clearOnLoad&&(c.clearRemovedOnLoad&&c.clearRemoved(d),c.tree.un("remove",c.onNodeRemove,c),d.removeAll(!1),c.tree.on("remove",c.onNodeRemove,c)),c.loading=!0,console.log("models:",c.models),console.log("root:",c.isRootNode(a.node)),!c.isRootNode(a.node)&&c.models&&2==c.models.length){console.log("taking alternate route");var g=Ext.create("Ext.data.Operation",a);g.id=null;var h=Ext.create("Ext.data.Operation",a);h.id=null,Deft.Chain.sequence([function(){var a=Ext.create("Deft.Deferred"),b=c.models[1];return g.sorters=c.sorters_by_model[b.typePath],g.filters=c._getFilterByModel(b.typePath),console.log("o1",b.typePath,g),b.getProxy().read(g,function(b){a.resolve(b)},c),a.promise},function(){var a=Ext.create("Deft.Deferred"),b=c.models[0];return h.filters=c._getFilterByModel(b.typePath),h.sorters=c.sorters_by_model[b.typePath],console.log("o2:",b.typePath,h),b.getProxy().read(h,function(b){a.resolve(b)},c),a.promise}]).then({scope:c,success:function(a){var b=Ext.Array.merge(a[0].getRecords(),a[1].getRecords()),d=Ext.create("Ext.data.ResultSet",{records:b});a[0].resultSet=d,c.onProxyLoad(a[0])},failure:function(a){alert(a)}})}else c.proxy.read(b,c.onProxyLoad,c);return c.loading&&d&&d.set("loading",!0),c},_getFilterByModel:function(a){var b=this.extra_filter_by_model[a],c=this.filter_by_model[a];console.log("_getFilterByModel",a,c,b);var d=c;return Ext.isEmpty(b)||(d=Ext.Array.merge(c,b)),console.log(" - returning:",d),d}}),Ext.override(Rally.data.wsapi.TreeStore,{load:function(a){console.log("wsapi treestore load",a),this.recordLoadBegin({description:"tree store load",component:this.requester}),this._hasErrors=!1,this.on("beforeload",function(a,b){delete b.id},this,{single:!0}),a=this._configureLoad(a),a.originalCallback=a.callback;var b=Ext.create("Deft.Deferred"),c=this;return a.callback=function(d,e,f){c.dataLoaded=!0,c.isRootNode(a.node)&&e.resultSet&&e.resultSet.sums&&c.setSums(e.resultSet.sums),c._pageIsEmpty(e)?c._reloadEmptyPage(a).then({success:function(d){c._resolveLoadingRecords(b,d,a,e,f)},failure:function(){c._rejectLoadingRecord(b,a,e)}}):c._resolveLoadingRecords(b,d,a,e,f)},this._isViewReady()&&this._beforeInitialLoad(a),this.callParent([a]),b.promise},temp_records:null,_resolveLoadingRecords:function(a,b,c,d,e){delete c.callback,this.temp_records&&null!=this.temp_records?(b=Ext.Array.merge(this.temp_records,b),this.temp_records=null,this.fred=!1,c.originalCallback&&Ext.callback(c.originalCallback,c.scope||this,[b,d,e]),a.resolve(b)):this.temp_records=b},extra_filter_by_model:{},filter_by_model:{},sorters_by_model:{testfolder:[{property:"ObjectID"}],testcase:[{property:"DragAndDropRank"}]},_getChildNodeFilters:function(a){console.log("Getting child node filters",a);var b=a.self.typePath,c=this._getChildTypePaths([b]),d=this._getParentFieldNames(c,b);return Ext.Array.each(c,function(c){var d=this.mapper.getParentFieldForChild(c,b);d&&(this.filter_by_model[c]=[Ext.create("Rally.data.wsapi.Filter",{property:d,operator:"=",value:a.get("_ref")})])},this),d.length?[Rally.data.wsapi.Filter.or(_.map(d,function(b){return{property:b,operator:"=",value:a.get("_ref")}}))]:[]},_getRankField:function(a){return console.log("Model:",a),Rally.data.Ranker.getRankField(a)},_getDefaultChildSorters:function(){return[{property:"TaskIndex",direction:"ASC"},{property:this._getRankField(this.model),direction:"ASC"}]}}),Ext.override(Rally.data.wsapi.ModelBuilder,{buildCompositeArtifact:function(a,b,c){var d="testfolder",e="TestFolder",f=Ext.create("Rally.data.TypeDefinitionMetaData",{requested:d,context:b,wsapiVersion:c}),g={Attributes:this._getAttributeDefinitionsFromModels(a),TypePath:d,DisplayName:e,Parent:null,ElementName:e,Restorable:!1},h=this.build(f,g);h.getArtifactComponentModels=function(){return a},h.getModelsForField=function(a){return _.transform(this.getArtifactComponentModels(),function(b,c){_.find(c.getFields(),{name:a.name})&&b.push(c)},[])};var i=_.indexBy(h.getArtifactComponentModels(),"typeName");return h.getArtifactComponentModel=function(a){var b=a.toLowerCase();return i[b]},h},build:function(a,b){var c=b.Attributes,d=_.map(Rally.data.FieldFactory.getCommonWsapiFields().concat(Rally.data.FieldFactory.getVirtualWsapiFields(b)),this._createWsapiField),e=d.concat(Rally.data.FieldFactory.buildFieldsFromTypeDefinitionAttributes(c)),f=Rally.data.FieldFactory.buildValidationsFromTypeDefinitionAttributes(c),g=b.TypePath,h=a.getTypePath().toLowerCase();return _.each(e,function(a){a.modelType=g.toLowerCase()}),Ext.define(a.getFullyQualifiedName(),{extend:"Rally.data.wsapi.Model",fields:e,validations:f,statics:{typeName:h,prettyTypeName:"hierarchicalrequirement"===h?"userstory":h,typePath:g.toLowerCase(),displayName:b.DisplayName,parentTypeName:b.Parent&&b.Parent._refObjectName,elementName:b.ElementName,ordinal:b.Ordinal,context:a.context,restorable:b.Restorable,wsapiVersion:a.wsapiVersion,typeDefOid:b.ObjectID,typeDefName:b.Name},proxy:Rally.data.wsapi.ModelFactory.buildProxy(Rally.data.wsapi.ModelFactory.buildProxyUrl(g,a.wsapiVersion),b.ElementName,null,a.wsapiVersion)})}}),Ext.override(Rally.ui.grid.TreeGrid,{getModels:function(){return this.store.models||[this.store.model]}}),Ext.define("Rally.technicalservices.dialog.BulkAddToTestSetDialog",{extend:"Rally.ui.dialog.ArtifactChooserDialog",alias:"widget.tsaddtotestsetdialog",config:{autoShow:!0,title:"Choose a TestSet",artifactTypes:"TestSet",multiple:!1,columns:[{text:"ID",dataIndex:"FormattedID",renderer:_.identity},"Name","Iteration","Project"]}}),Ext.define("Rally.technicalservices.plugin.GridBoardCustomTestCaseFilterControl",{alias:"plugin.tsgridboardcustomtestcasefiltercontrol",extend:"Rally.ui.gridboard.plugin.GridBoardCustomFilterControl",getControlCmpConfig:function(){var a=Ext.merge({xtype:"container",width:72,layout:"hbox",items:[Ext.merge({xtype:"rallycustomfilterbutton",context:this.cmp.getContext(),listeners:{customfilter:{fn:this._onFilterButtonStateAvailable,single:!0,scope:this}},toolTipConfig:{html:"TestCase Filter",anchor:"top",mouseOffset:[-9,-2]},margin:"3 9 3 30"},this.filterControlConfig)]},this.containerConfig);return this.showOwnerFilter&&(a.width+=210,a.items.push(Ext.merge({xtype:"rallyownerfilter",margin:"3px 10px 0px 0px",listConfig:{width:200},context:this.cmp.getContext(),width:200,clearFilterText:"-- Clear Filter --",listeners:{initalvalueset:{fn:this._onOwnerFilterStateAvailable,single:!0},select:this._applyFilter,scope:this}},this.ownerFilterControlConfig))),a},_applyFilter:function(){var a=_.compact(Ext.Array.merge(this.filterButton.getFilters(),this.ownerFilter&&this.ownerFilter.getFilter())),b=Rally.data.wsapi.filter.FilterModificationator.modifyFilters(a,this.filterChildren),c={types:this.filterButton.getTypes(),filters:b};console.log("filter sends: ",c),this.cmp.applyCustomFilter(c)}}),Ext.define("Rally.technicalservices.TFParentChildMapper",{extend:"Rally.data.wsapi.ParentChildMapper",constructor:function(){this.parentChildTypeMap={testfolder:[{typePath:"testcase",collectionName:"TestCases",parentField:"TestFolder"},{typePath:"testfolder",collectionName:"Children",parentField:"Parent"}],hierarchicalrequirement:[{typePath:"defect",collectionName:"Defects",parentField:"Requirement"},{typePath:"task",collectionName:"Tasks",parentField:"WorkProduct"},{typePath:"testcase",collectionName:"TestCases",parentField:"WorkProduct"},{typePath:"hierarchicalrequirement",collectionName:"Children",parentField:"Parent"}],defect:[{typePath:"task",collectionName:"Tasks",parentField:"WorkProduct"},{typePath:"testcase",collectionName:"TestCases",parentField:"WorkProduct"}],defectsuite:[{typePath:"defect",collectionName:"Defects",parentField:"DefectSuites"},{typePath:"task",collectionName:"Tasks",parentField:"WorkProduct"},{typePath:"testcase",collectionName:"TestCases",parentField:"WorkProduct"}],testset:[{typePath:"task",collectionName:"Tasks",parentField:"WorkProduct"},{typePath:"testcase",collectionName:"TestCases",parentField:"TestSets"}]}},getParentFieldForChild:function(a,b){var c=this.parentChildTypeMap[b],d=null;return c&&Ext.Array.each(c,function(b){b.typePath==a&&b.parentField&&(d=b.parentField)}),d}}),Ext.define("Rally.technicalservices.TestFolderChooserDialog",{requires:["Ext.data.Store","Rally.data.ModelFactory","Rally.data.wsapi.Filter","Rally.ui.Button","Rally.ui.EmptyTextFactory","Rally.ui.grid.Grid","Rally.ui.selection.CheckboxModel","Rally.util.Ref"],extend:"Rally.ui.dialog.Dialog",alias:"widget.tstestfolderchooserdialog",clientMetrics:[{method:"_search",description:"chooser search performed"},{event:"artifactchosen",description:"artifact chosen"}],height:400,width:600,layout:"fit",closable:!0,draggable:!0,config:{title:"Choose a TestFolder",artifactTypes:["testfolder"],multiple:!1,storeConfig:{fetch:["FormattedID","Name","Parent","ObjectID"],compact:!1,context:{project:null,projectScopeDown:!1,projectScopeUp:!1},sorters:[{property:"FormattedID",direction:"DESC"}]},columns:[{text:"ID",dataIndex:"FormattedID",renderer:_.identity},"Name"],selectionButtonText:"Done",gridConfig:{},selectedRef:void 0,selectedRecords:void 0,initialSelectedRecords:void 0,showRadioButtons:!0,allowNoChoice:!0},constructor:function(a){this.mergeConfig(a),this.callParent([this.config])},selectionCache:[],initComponent:function(){this.callParent(arguments),this.addEvents("artifactchosen"),this.addCls(["chooserDialog","chooser-dialog"])},destroy:function(){this._destroyTooltip(),this.callParent(arguments)},beforeRender:function(){this.callParent(arguments),this.addDocked({xtype:"toolbar",dock:"bottom",padding:"0 0 10 0",layout:{type:"hbox",pack:"center"},ui:"footer",items:[{xtype:"rallybutton",itemId:"doneButton",text:this.selectionButtonText,cls:"primary rly-small",scope:this,disabled:!this.allowNoChoice,userAction:"clicked done in dialog",handler:function(){this.fireEvent("artifactchosen",this,this.getSelectedRecords()),this.close()}},{xtype:"rallybutton",text:"Cancel",cls:"secondary rly-small",handler:this.close,scope:this,ui:"link"}]}),this.introText&&this.addDocked({xtype:"component",componentCls:"intro-panel",html:this.introText}),this.addDocked({xtype:"toolbar",itemId:"searchBar",dock:"top",border:!1,padding:"0 0 10px 0",items:this.getSearchBarItems()}),this.buildGrid(),this.selectionCache=this.getInitialSelectedRecords()||[]},getSelectedRecords:function(){return this.multiple?this.selectionCache:this.selectionCache[0]},getGridModels:function(){return this.artifactTypes},getSearchBarItems:function(){return[{xtype:"triggerfield",cls:"rui-triggerfield chooser-search-terms",emptyText:"Search Keyword or ID",enableKeyEvents:!0,flex:1,itemId:"searchTerms",listeners:{keyup:function(a,b){b.getKey()===Ext.EventObject.ENTER&&this._search()},afterrender:function(a){a.focus()},scope:this},triggerBaseCls:"icon-search chooser-search-icon"}]},getStoreFilters:function(){return[]},buildGrid:function(){this.grid&&this.grid.destroy();var a=this,b={mode:this.multiple?"SIMPLE":"SINGLE",allowDeselect:!0};this.grid=Ext.create("Rally.ui.grid.Grid",Ext.Object.merge({autoAddAllModelFieldsAsColumns:!1,columnCfgs:this.columns,enableEditing:!1,enableColumnHide:!1,enableColumnMove:!1,model:this.getGridModels(),selModel:this.showRadioButtons||this.multiple?Ext.create("Rally.ui.selection.CheckboxModel",Ext.apply(b,{enableKeyNav:!1,isRowSelectable:function(b){return a._isArtifactEditable(b)}})):Ext.create("Ext.selection.RowModel",b),showRowActionsColumn:!1,storeConfig:this._getStoreConfig(),viewConfig:{emptyText:Rally.ui.EmptyTextFactory.get("defaultText"),publishLoadMessages:!1,getRowClass:function(b){return Rally.util.Test.toBrowserTestCssClass("row",b.getId())+(a._isArtifactEditable(b)?"":" disabled-row")}}},this.config.gridConfig)),this.mon(this.grid,{beforeselect:this._onGridSelect,beforedeselect:this._onGridDeselect,load:this._onGridLoad,scope:this}),this.add(this.grid),this._onGridReady()},_addTooltip:function(){this._destroyTooltip(),this.tooltip=Ext.create("Rally.ui.tooltip.ToolTip",{target:this.grid.getEl(),html:"You don't have permission to edit this item.",delegate:".disabled-row",anchor:"top",showDelay:0,showOnClick:!0})},_destroyTooltip:function(){this.tooltip&&this.tooltip.destroy()},_getStoreConfig:function(){var a=_.cloneDeep(this.getInitialConfig().storeConfig);return this._getSearchTerms()&&(a.search=this._getSearchTerms()),a.filters=(a.filters||[]).concat(this.getStoreFilters()),a},_enableDoneButton:function(){this.allowNoChoice?this.down("#doneButton").setDisabled(!1):this.down("#doneButton").setDisabled(this.selectionCache.length?!1:!0)},_findRecordInSelectionCache:function(a){return _.findIndex(this.selectionCache,function(b){return b.get("_ref")===a.get("_ref")})},_onGridSelect:function(a,b){if(this._isArtifactEditable(b)){var c=this._findRecordInSelectionCache(b);-1===c&&(this.multiple||(this.selectionCache=[]),this.selectionCache.push(b)),this._enableDoneButton()}},_onGridDeselect:function(a,b){var c=this._findRecordInSelectionCache(b);-1!==c&&this.selectionCache.splice(c,1),this._enableDoneButton()},_onGridReady:function(){return this.grid.rendered?this.grid.getStore().isLoading()?void this.mon(this.grid,"load",this._onGridReady,this,{single:!0}):(this._onGridLoad(),void this.center()):void this.mon(this.grid,"afterrender",this._onGridReady,this,{single:!0})},_isArtifactEditable:function(a){return Rally.environment.getContext().getPermissions().isProjectEditor(a.get("Project"))},_onGridLoad:function(){var a=Ext.Array.from(this.selectedRef||this.selectedRecords);if(a.length){var b=_.compact(_.map(a,function(a){var b=this.grid.getStore().find("_ref",a);return b>=0?this.grid.getStore().getAt(b):null},this));b.length&&this.grid.getSelectionModel().select(b)}else{var c=this.grid.store,d=[];_.each(this.selectionCache,function(a){var b=c.find("_ref",a.get("_ref"));if(-1!==b){var e=c.getAt(b);d.push(e)}}),d.length&&this.grid.getSelectionModel().select(d)}this._addTooltip(),Rally.BrowserTest&&Rally.BrowserTest.publishComponentReady(this)},_search:function(){var a=this._getSearchTerms(),b=this.grid.getStore();if(a){var c=Rally.data.wsapi.Filter.or([{property:"Name",operator:"contains",value:a},{property:"FormattedID",operator:"contains",value:a}]);b.setFilter(c)}else b.clearFilter(!0);b.loadPage(1)},_getSearchTerms:function(){var a=this.down("#searchTerms");return a&&a.getValue()}}),Ext.define("Rally.technicalservices.GridBoardSearchControl",{alias:"plugin.tsgridboardsearchcontrol",extend:"Ext.AbstractPlugin",mixins:["Rally.ui.gridboard.plugin.GridBoardControlShowable"],requires:["Rally.data.ModelTypes"],headerPosition:"right",searchControlConfig:{},containerConfig:{},init:function(a){this.callParent(arguments),this.gridboard=a,this.context=this.searchControlConfig.context||this.gridboard.getContext();var b=this.showControl();this.searchButton=b.down("rallybutton")},getControlCmpConfig:function(){var a=this,b=Ext.merge({xtype:"container",width:72,layout:"hbox",items:[Ext.merge({xtype:"rallybutton",text:'<span class="icon-search ">&nbsp;</span>',itemId:"search_button",cls:"secondary rly-small",listeners:{scope:a,click:a._showSearchDialog,boxready:a._applyFilter},toolTipConfig:{html:"Search",anchor:"top",mouseOffset:[-9,-2]},margin:"3 9 3 30"},this.searchControlConfig)]},this.containerConfig);return b},_showSearchDialog:function(){Ext.create("Rally.technicalservices.TestFolderChooserDialog",{autoShow:!0,storeConfig:{context:this.context},listeners:{scope:this,artifactchosen:this._onRecordSelected}})},_applyFilter:function(){var a={types:[],filters:[]};this.gridboard.applyCustomFilter(a)},_getTypesByNames:function(a){return _.map(a,function(a){return Rally.data.ModelTypes.getTypeByName(a).toLowerCase()},this)},_onRecordSelected:function(a,b){console.log("found: ",b),b?(this.gridboard.fireEvent("recordSelect",b),this.indicateActiveFilterPresent()):(this.indicateNoActiveFilterPresent(),this.gridboard.fireEvent("clearSearch"))},indicateActiveFilterPresent:function(){console.log("this:",this);var a=this.searchButton;a.hasCls("primary")||(a.addCls("primary"),a.removeCls("secondary"))},indicateNoActiveFilterPresent:function(){console.log("this:",this);var a=this.searchButton;a.hasCls("secondary")||(a.addCls("secondary"),a.removeCls("primary"))}}),Ext.define("TestFolderNavigator",{extend:"Rally.app.GridBoardApp",cls:"testfolder-app",modelNames:["TestFolder"],statePrefix:"ts-testfolder",enableXmlExport:!1,integrationHeaders:{name:"TestFolderNavigator"},logger:Ext.create("Rally.technicalservices.Logger"),getPermanentFilters:function(){return[Rally.data.wsapi.Filter.or([{property:"Parent",operator:"=",value:""}])]},getFieldPickerConfig:function(){var a=this.callParent(arguments);return a.gridFieldBlackList=_.union(a.gridFieldBlackList,["VersionId","Parent","TestCases","Recycled","TestFolder","Steps","Objective","PostConditions","PreConditions","Results","TestSets","ValidationExpectedResult","ValidationInput"]),_.merge(a,{_getModels:function(){return console.log("models for picker",this.cmp.getModels()),_.reduce(this.cmp.getModels(),function(a,b){return"artifact"===b.typePath?a=a.concat(b.getArtifactComponentModels()):a.push(b),a},[])},gridAlwaysSelectedValues:["FormattedID","Name"]})},getGridStores:function(){return this._getTreeGridStore()},_getTreeGridStore:function(){return Ext.create("Rally.data.wsapi.TreeStoreBuilder").build(_.merge({autoLoad:!1,sorters:[{property:"ObjectID",direction:"ASC"}],childPageSizeEnabled:!0,mapper:Ext.create("Rally.technicalservices.TFParentChildMapper"),enableHierarchy:!0,fetch:_.union(["Workspace","Name"],this.columnNames),models:_.clone(this.models),pageSize:25,remoteSort:!0,root:{expanded:!0},getParentFieldNamesByChildType:this._getParentFieldNamesByChildType,childLevelSorters:[{property:"FormattedID",direction:"ASC"}]},this.getGridStoreConfig())).then({success:function(a){return a.enableHierarchy=!0,{gridStore:a}},scope:this})},_getParentFieldNamesByChildType:function(a,b){this.model.getArtifactComponentModel(a);return["Parent"]},getAddNewConfig:function(){return Ext.merge(this.callParent(arguments),{showRank:!1,showAddWithDetails:!1,openEditorAfterAddFailure:!1,minWidth:800})},getGridBoardPlugins:function(){return[{ptype:"tsgridboardcustomtestcasefiltercontrol",filterControlConfig:{modelNames:["TestCase"],stateful:!1},showOwnerFilter:!1},{ptype:"tsgridboardsearchcontrol",searchControlConfig:Ext.Object.merge({},this.getSearchControlConfig())},_.merge({ptype:"rallygridboardfieldpicker",headerPosition:"left"},this.getFieldPickerConfig())].concat(this.enableGridBoardToggle?"rallygridboardtoggleable":[])},getSearchControlConfig:function(){return{}},getColumnCfgs:function(){return _.isEmpty(this.columnNames)?["Name"]:this.columnNames},getGridConfig:function(a){return{xtype:"rallytreegrid",alwaysShowDefaultColumns:!0,columnCfgs:this.getColumnCfgs(),enableBulkEdit:!0,enableRanking:Rally.data.ModelTypes.areArtifacts(this.modelNames),expandAllInColumnHeaderEnabled:!0,
plugins:this.getGridPlugins(),stateId:this.getScopedStateId("grid"),stateful:!0,showPagingToolbar:!1,store:a&&a.gridStore,storeConfig:{autoLoad:!0,filters:this.getPermanentFilters()},useFilterCollection:!1,summaryColumns:[],listeners:{afterrender:this.publishComponentReady,storeload:{fn:function(){this.fireEvent("contentupdated",this)},single:!0},scope:this}}},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()}});
            
               Rally.launchApp('TestFolderNavigator', {
                   name: 'TestFolderNavigator'
               });
        });
    </script>
    
    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}
    </style>

</head>
<body></body>
</html>